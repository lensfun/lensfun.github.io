name: Deploy Jekyll site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: master

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Checkout lensfun
        uses: actions/checkout@v4
        with:
          repository: lensfun/lensfun
          path: lensfun-repo
          fetch-depth: 0 # all history, so we can get the timestamp of last db update
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install lxml
        run: python -m pip install --upgrade pip lxml
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Install doxygen, docutils-common
        run: sudo apt update && sudo apt install doxygen docutils-common
      - name: Generate update db
        run: python lensfun-repo/tools/update_database/generate_db.py -i lensfun-repo/data/db/ -o db/
      - name: Build docs
        run: |
          cmake -B lensfun-repo/build -S lensfun-repo -DBUILD_DOC=ON -DINSTALL_PYTHON_MODULE=OFF
          cmake --build lensfun-repo/build --target doc
          cp -r lensfun-repo/build/doc_doxygen/ manual/latest/
          rm -rf lensfun-repo/
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
